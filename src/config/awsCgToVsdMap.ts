export const awsCgToVsdResourceTypeMap = {
    alb: "aws_lb",
    apiGatewayDomainName: "",
    apiGatewayHttpApi: "aws_api_gateway_rest_api",
    apiGatewayResource: "aws_api_gateway_resource",
    apiGatewayRestApi: "aws_api_gateway_rest_api",
    apiGatewayStage: "aws_api_gateway_stage",
    appSync: "aws_appsync_",
    asg: "aws_autoscaling_group",
    athenaDataCatalog: "aws_athena_data_catalog", // provided by CG
    billing: "",
    clientVpnEndpoint: "aws_ec2_client_vpn_endpoint",
    cloud9: "aws_cloud9_environment_ec2",
    cloudFormationStack: "aws_cloudformation_stack",
    cloudFormationStackSet: "aws_cloudformation_stack_set",
    cloudfront: "aws_cloudfront_distribution",
    cloudtrail: "cloudtrail",
    cloudwatch: "aws_cloudwatch_metric_alarm",
    cloudwatchLog: "",
    codebuild: "aws_code_build", // provided by CG
    cognitoIdentityPool: "aws_cognito_identity_pool",
    cognitoUserPool: "aws_cognito_user_pool",
    configurationRecorder: "",
    customerGateway: "aws_customer_gateway",
    dmsReplicationInstance: "",
    dynamodb: "aws_dynamodb_table",
    ebs: "aws_ebs_volume",
    ec2Instance: "aws_instance",
    ecr: "aws_ecr_repository",
    ecsCluster: "",
    ecsContainer: "aws_ecs_container_definition",
    ecsService: "aws_ecs_service",
    ecsTask: "aws_ecs_task",
    ecsTaskDefinition: "",
    ecsTaskSet: "",
    efs: "aws_efs_file_system",
    efsMountTarget: "aws_efs_mount_target",
    eip: "aws_eip",
    eksCluster: "aws_eks_cluster",
    elasticBeanstalkApp: "aws_elastic_beanstalk_application",
    elasticBeanstalkEnv: "aws_elastic_beanstalk_environment",
    elastiCacheCluster: "aws_elasticache_cluster",
    elastiCacheReplicationGroup: "aws_elasticache_replication_group",
    elasticSearchDomain: "",
    elb: "aws_elb",
    flowLog: "",
    glueJob: "aws_glue_job", //provided by CG
    glueRegistry: "aws_glue_registry", //provided by CG
    guardDutyDetector: "",
    emrCluster: "aws_emr_cluster",
    emrInstance: "",
    emrStep: "",
    iamAccessAnalyzer: "",
    iamUser: "aws_iam_user",
    iamGroup: "aws_iam_group",
    iamRole: "aws_iam_role",
    iamPolicy: "aws_iam_policy",
    iamPasswordPolicy: "aws_iam_password_policy",
    iamSamlProvider: "aws_iam_saml_provider",
    iamOpenIdConnectProvider: "aws_iam_open_id_connect_provider",
    iamServerCertificate: "aws_iam_server_certificate",
    iamInstanceProfile: "", //
    igw: "aws_internet_gateway",
    iot: "aws_iot_thing",
    kinesisFirehose: "aws_kinesis_firehose_delivery_stream",
    kinesisStream: "aws_kinesis_stream",
    kms: "aws_kms_key",
    lambda: "aws_lambda_function",
    managedAirflow: "aws_mwaa_environment",
    nacl: "aws_network_acl",
    nat: "aws_nat_gateway",
    networkInterface: "aws_network_interface",
    organization: "aws_organizations_organization",
    rdsCluster: "aws_rds_cluster",
    rdsClusterSnapshot: "",
    rdsDbInstance: "aws_db_instance",
    redshiftCluster: "aws_redshift_cluster",
    route53HostedZone: "aws_route53_zone",
    route53Record: "aws_route53_record",
    routeTable: "aws_route_table",
    sageMakerExperiment: "aws_sage_maker_experiment", //provided by CG
    sageMakerNotebookInstance: "",
    sageMakerProject: "aws_sage_maker_project", //provided by CG
    s3: "aws_s3_bucket",
    secretsManager: "aws_secretsmanager_secret",
    ses: "aws_ses_email_identity",
    sg: "aws_security_group",
    sns: "aws_sns_topic",
    sqs: "aws_sqs_queue",
    subnet: "aws_subnet",
    systemsManagerInstance: "",
    systemsManagerDocument: "",
    transitGateway: "aws_ec2_transit_gateway",
    transitGatewayAttachment: "aws_ec2_transit_gateway_vpc_attachment",
    vpc: "aws_vpc",
    vpnConnection: "aws_vpn_connection",
    vpnGateway: "aws_vpn_gateway",
    wafV2WebAcl: "aws_waf_v2_web_acl", //provided by CG
};
